{"version":3,"file":"static/js/37.3ae37da4.chunk.js","mappings":"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","sources":["pages/Dashboard.js"],"sourcesContent":["/**\n * Dashboard Page\n * Main dashboard with financial overview and charts\n * Optimized with lazy loading for charts\n */\n\nimport React, { useState, useEffect, useCallback, lazy, Suspense } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useAssistant } from '../contexts/AssistantContext';\nimport { transactionAPI, reportAPI } from '../services/api';\nimport { toast } from 'react-toastify';\nimport './Dashboard.css';\n\n// Lazy load charts to reduce initial bundle size\nconst Charts = lazy(() => import('../components/DashboardCharts'));\n\nconst Dashboard = () => {\n  const { user } = useAuth();\n  const { celebrate, worry, encourage, idle } = useAssistant();\n  const [summary, setSummary] = useState(null);\n  const [recentTransactions, setRecentTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Memoize reaction functions to avoid dependency issues\n  const triggerReactions = useCallback(() => {\n    if (summary) {\n      const { totalIncome, totalExpenses } = summary.summary;\n      const savings = totalIncome - totalExpenses;\n      const savingsRatePercentage = totalIncome > 0 ? (savings / totalIncome) * 100 : 0;\n      \n      // Savings reactions based on savings rate (percentage of income saved)\n      if (savingsRatePercentage >= 60) {\n        // Great savings rate (>= 60% of income saved) - celebrate!\n        celebrate();\n      } else if (savingsRatePercentage >= 40) {\n        // Good savings rate (40-59% saved) - idle/steady\n        idle();\n      } else if (savingsRatePercentage >= 20) {\n        // Moderate savings rate (20-39% saved) - encourage\n        encourage();\n      } else if (savingsRatePercentage >= 5) {\n        // Low savings rate (5-19% saved) - worry\n        worry();\n      } else {\n        // Very low or negative savings (< 5%) - worry more\n        worry();\n      }\n    }\n  }, [summary, celebrate, encourage, idle, worry]);\n\n  useEffect(() => {\n    loadDashboardData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    triggerReactions();\n  }, [triggerReactions]);\n\n  const loadDashboardData = async () => {\n    try {\n      const [summaryRes, transactionsRes] = await Promise.all([\n        reportAPI.getSummary(),\n        transactionAPI.getAll()\n      ]);\n\n      setSummary(summaryRes.data);\n      setRecentTransactions(transactionsRes.data.slice(0, 5));\n    } catch (error) {\n      toast.error('Failed to load dashboard data');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\"><div className=\"spinner\"></div></div>;\n  }\n\n  if (!summary) {\n    return <div className=\"container\">No data available</div>;\n  }\n\n  const { totalIncome, totalExpenses, balance, savingsGoal, savings, savingsPercentage } = summary.summary;\n  const { categoryBreakdown, insights } = summary;\n\n  // Calculate progress toward savings goal\n  const goalProgress = savingsGoal > 0 ? (savings / savingsGoal) * 100 : 0;\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>Welcome back, {user?.name}! ðŸ‘‹</h1>\n        <p>Here's your financial overview</p>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-4 mb-4\">\n        <div className=\"stat-card income\">\n          <div className=\"stat-icon\">ðŸ’°</div>\n          <div className=\"stat-info\">\n            <p className=\"stat-label\">Total Income</p>\n            <h2 className=\"stat-value\">â‚¹{totalIncome.toFixed(2)}</h2>\n          </div>\n        </div>\n\n        <div className=\"stat-card expense\">\n          <div className=\"stat-icon\">ðŸ’¸</div>\n          <div className=\"stat-info\">\n            <p className=\"stat-label\">Total Expenses</p>\n            <h2 className=\"stat-value\">â‚¹{totalExpenses.toFixed(2)}</h2>\n          </div>\n        </div>\n\n        <div className=\"stat-card balance\">\n          <div className=\"stat-icon\">ðŸ’µ</div>\n          <div className=\"stat-info\">\n            <p className=\"stat-label\">Balance</p>\n            <h2 className=\"stat-value\">â‚¹{balance.toFixed(2)}</h2>\n          </div>\n        </div>\n\n        <div className=\"stat-card savings\">\n          <div className=\"stat-icon\">ðŸŽ¯</div>\n          <div className=\"stat-info\">\n            <p className=\"stat-label\">Savings Goal</p>\n            <h2 className=\"stat-value\">â‚¹{savingsGoal.toFixed(2)}</h2>\n          </div>\n        </div>\n      </div>\n\n      {/* Savings Progress */}\n      <div className=\"card mb-4\">\n        <h3 className=\"card-title\">Savings Progress</h3>\n        <div className=\"budget-progress\">\n          <div className=\"progress-bar\">\n            <div \n              className={`progress-fill ${goalProgress >= 100 ? 'good-savings' : goalProgress < 10 ? 'low-savings' : ''}`}\n              style={{ width: `${Math.min(goalProgress, 100)}%` }}\n            ></div>\n          </div>\n          <div className=\"progress-info\">\n            <span>{goalProgress.toFixed(1)}% of goal achieved</span>\n            <span>â‚¹{savings.toFixed(2)} saved / â‚¹{savingsGoal.toFixed(2)} goal</span>\n          </div>\n          <div className=\"progress-info\" style={{ marginTop: '8px', fontSize: '14px', color: '#666' }}>\n            <span>ðŸ’¡ Savings rate: {savingsPercentage.toFixed(1)}% of income</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Insights */}\n      {insights.length > 0 && (\n        <div className=\"card mb-4\">\n          <h3 className=\"card-title\">ðŸ’¡ Insights</h3>\n          <ul className=\"insights-list\">\n            {insights.map((insight, index) => (\n              <li key={index}>{insight}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {/* Charts - Lazy loaded for performance */}\n      <Suspense fallback={\n        <div className=\"grid grid-2 mb-4\">\n          <div className=\"card\">\n            <h3 className=\"card-title\">Category Breakdown</h3>\n            <div style={{ textAlign: 'center', padding: '40px' }}>Loading charts...</div>\n          </div>\n          <div className=\"card\">\n            <h3 className=\"card-title\">Income vs Expenses</h3>\n            <div style={{ textAlign: 'center', padding: '40px' }}>Loading charts...</div>\n          </div>\n        </div>\n      }>\n        <Charts \n          categoryBreakdown={categoryBreakdown}\n          totalIncome={totalIncome}\n          totalExpenses={totalExpenses}\n        />\n      </Suspense>\n\n      {/* Recent Transactions */}\n      <div className=\"card\">\n        <h3 className=\"card-title\">Recent Transactions</h3>\n        {recentTransactions.length > 0 ? (\n          <div className=\"transactions-list\">\n            {recentTransactions.map((transaction) => (\n              <div key={transaction._id} className=\"transaction-item\">\n                <div className=\"transaction-icon\">\n                  {transaction.type === 'income' ? 'ðŸ’°' : 'ðŸ’¸'}\n                </div>\n                <div className=\"transaction-details\">\n                  <p className=\"transaction-category\">{transaction.category}</p>\n                  <p className=\"transaction-note\">{transaction.note || 'No description'}</p>\n                </div>\n                <div className={`transaction-amount ${transaction.type}`}>\n                  {transaction.type === 'income' ? '+' : '-'}â‚¹{transaction.amount.toFixed(2)}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-center\">No transactions yet</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["Charts","lazy","Dashboard","user","useAuth","celebrate","worry","encourage","idle","useAssistant","summary","setSummary","useState","recentTransactions","setRecentTransactions","loading","setLoading","triggerReactions","useCallback","totalIncome","totalExpenses","savingsRatePercentage","useEffect","loadDashboardData","async","summaryRes","transactionsRes","Promise","all","reportAPI","getSummary","transactionAPI","getAll","data","slice","error","toast","console","_jsx","className","children","balance","savingsGoal","savings","savingsPercentage","categoryBreakdown","insights","goalProgress","_jsxs","name","toFixed","concat","style","width","Math","min","marginTop","fontSize","color","length","map","insight","index","Suspense","fallback","textAlign","padding","transaction","type","category","note","amount","_id"],"sourceRoot":""}