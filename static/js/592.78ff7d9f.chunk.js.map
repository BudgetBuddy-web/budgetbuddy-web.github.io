{"version":3,"file":"static/js/592.78ff7d9f.chunk.js","mappings":"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","sources":["pages/Settings.js"],"sourcesContent":["/**\n * Settings Page\n * User profile and app settings\n */\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { userAPI } from '../services/api';\nimport { toast } from 'react-toastify';\nimport './Settings.css';\n\nconst Settings = () => {\n  const { user, updateUser, logout } = useAuth();\n  const { setTheme } = useTheme();\n  const navigate = useNavigate();\n  const [profileData, setProfileData] = useState({\n    name: user?.name || '',\n    profilePic: user?.profilePic || ''\n  });\n  const [savingsGoal, setSavingsGoal] = useState(user?.savingsGoal || 5000);\n  const [settings, setSettings] = useState({\n    assistantPersonality: user?.assistantPersonality || 'cheerful',\n    theme: user?.theme || 'light'\n  });\n  const [loading, setLoading] = useState({\n    profile: false,\n    savings: false,\n    settings: false\n  });\n\n  const handleProfileUpdate = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, profile: true });\n\n    try {\n      const response = await userAPI.updateProfile(profileData);\n      updateUser(response.data.user);\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      toast.error('Failed to update profile');\n      console.error(error);\n    } finally {\n      setLoading({ ...loading, profile: false });\n    }\n  };\n\n  const handleSavingsUpdate = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, savings: true });\n\n    try {\n      await userAPI.updateBudget({ savingsGoal });\n      updateUser({ savingsGoal });\n      toast.success('Savings goal updated successfully');\n    } catch (error) {\n      toast.error('Failed to update savings goal');\n      console.error(error);\n    } finally {\n      setLoading({ ...loading, savings: false });\n    }\n  };\n\n  const handleSettingsUpdate = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, settings: true });\n\n    try {\n      await userAPI.updateSettings(settings);\n      updateUser(settings);\n      \n      // Apply theme immediately\n      setTheme(settings.theme);\n      \n      toast.success('Settings updated successfully');\n    } catch (error) {\n      toast.error('Failed to update settings');\n      console.error(error);\n    } finally {\n      setLoading({ ...loading, settings: false });\n    }\n  };\n\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm(\n      '‚ö†Ô∏è Are you absolutely sure you want to delete your account?\\n\\n' +\n      'This will permanently delete:\\n' +\n      '‚Ä¢ All your transactions\\n' +\n      '‚Ä¢ Your profile and settings\\n' +\n      '‚Ä¢ All financial data and reports\\n\\n' +\n      'This action CANNOT be undone!'\n    );\n\n    if (!confirmed) return;\n\n    const doubleConfirm = window.prompt(\n      'Type \"DELETE\" (in capitals) to confirm account deletion:'\n    );\n\n    if (doubleConfirm !== 'DELETE') {\n      toast.error('Account deletion cancelled');\n      return;\n    }\n\n    try {\n      await userAPI.deleteAccount();\n      toast.success('Account deleted successfully');\n      logout();\n      navigate('/login');\n    } catch (error) {\n      toast.error('Failed to delete account');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"page-header\">\n        <h1>Settings</h1>\n        <p>Manage your profile and app preferences</p>\n      </div>\n\n      <div className=\"settings-grid\">\n        {/* Profile Settings */}\n        <div className=\"card\">\n          <h2 className=\"section-title\">üë§ Profile Information</h2>\n          <form onSubmit={handleProfileUpdate}>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Full Name</label>\n              <input\n                type=\"text\"\n                value={profileData.name}\n                onChange={(e) => setProfileData({ ...profileData, name: e.target.value })}\n                className=\"form-control\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"email\"\n                value={user?.email}\n                className=\"form-control\"\n                disabled\n              />\n              <small className=\"form-text\">Email cannot be changed</small>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Profile Picture URL</label>\n              <input\n                type=\"url\"\n                value={profileData.profilePic}\n                onChange={(e) => setProfileData({ ...profileData, profilePic: e.target.value })}\n                className=\"form-control\"\n                placeholder=\"https://example.com/avatar.jpg\"\n              />\n            </div>\n\n            <div className=\"profile-preview\">\n              <img \n                src={profileData.profilePic} \n                alt=\"Profile\" \n                className=\"preview-image\"\n                onError={(e) => {\n                  e.target.src = 'https://ui-avatars.com/api/?name=User&background=random';\n                }}\n              />\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading.profile}\n            >\n              {loading.profile ? 'Updating...' : 'Update Profile'}\n            </button>\n          </form>\n        </div>\n\n        {/* Savings Settings */}\n        <div className=\"card\">\n          <h2 className=\"section-title\">üéØ Savings Goal</h2>\n          <form onSubmit={handleSavingsUpdate}>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Monthly Savings Goal (‚Çπ)</label>\n              <input\n                type=\"number\"\n                value={savingsGoal}\n                onChange={(e) => setSavingsGoal(parseFloat(e.target.value))}\n                className=\"form-control\"\n                min=\"0\"\n                step=\"100\"\n                required\n              />\n              <small className=\"form-text\">\n                Set your monthly savings target (recommended: 20-50% of income)\n              </small>\n            </div>\n\n            <div className=\"budget-info\">\n              <div className=\"info-item\">\n                <span className=\"info-label\">Current Goal:</span>\n                <span className=\"info-value\">‚Çπ{user?.savingsGoal?.toFixed(2)}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">New Goal:</span>\n                <span className=\"info-value\">‚Çπ{savingsGoal.toFixed(2)}</span>\n              </div>\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading.savings}\n            >\n              {loading.savings ? 'Updating...' : 'Update Savings Goal'}\n            </button>\n          </form>\n        </div>\n\n        {/* App Settings */}\n        <div className=\"card\">\n          <h2 className=\"section-title\">‚öôÔ∏è App Preferences</h2>\n          <form onSubmit={handleSettingsUpdate}>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Assistant Personality</label>\n              <select\n                value={settings.assistantPersonality}\n                onChange={(e) => setSettings({ ...settings, assistantPersonality: e.target.value })}\n                className=\"form-select\"\n              >\n                <option value=\"cheerful\">üòä Cheerful - Enthusiastic and energetic</option>\n                <option value=\"calm\">üòå Calm - Balanced and encouraging</option>\n                <option value=\"strict\">üòê Strict - Direct and goal-focused</option>\n              </select>\n              <small className=\"form-text\">\n                Choose how your anime assistant interacts with you\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Theme</label>\n              <select\n                value={settings.theme}\n                onChange={(e) => {\n                  const newTheme = e.target.value;\n                  setSettings({ ...settings, theme: newTheme });\n                  // Apply theme instantly for preview\n                  setTheme(newTheme);\n                }}\n                className=\"form-select\"\n              >\n                <option value=\"light\">‚òÄÔ∏è Light Theme</option>\n                <option value=\"dark\">üåô Dark Theme</option>\n                <option value=\"auto\">üîÑ Auto (System)</option>\n              </select>\n              <small className=\"form-text\">\n                Select your preferred color scheme (changes instantly!)\n              </small>\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading.settings}\n            >\n              {loading.settings ? 'Updating...' : 'Update Settings'}\n            </button>\n          </form>\n        </div>\n\n        {/* Delete Account */}\n        <div className=\"card danger-zone\">\n          <h2 className=\"section-title\">ÔøΩÔ∏è Delete Account</h2>\n          <p className=\"warning-text\">\n            ‚ö†Ô∏è Warning: This action cannot be undone. Deleting your account will permanently remove:\n          </p>\n          <ul className=\"warning-list\">\n            <li>All your transactions</li>\n            <li>Your profile and settings</li>\n            <li>All financial data and reports</li>\n          </ul>\n          <button \n            className=\"btn btn-danger\"\n            onClick={handleDeleteAccount}\n          >\n            Delete My Account\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"names":["Settings","_user$savingsGoal","user","updateUser","logout","useAuth","setTheme","useTheme","navigate","useNavigate","profileData","setProfileData","useState","name","profilePic","savingsGoal","setSavingsGoal","settings","setSettings","assistantPersonality","theme","loading","setLoading","profile","savings","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","_objectSpread","response","userAPI","updateProfile","data","toast","success","error","console","type","value","onChange","target","required","email","disabled","placeholder","src","alt","onError","updateBudget","parseFloat","min","step","toFixed","updateSettings","newTheme","onClick","window","confirm","prompt","deleteAccount"],"sourceRoot":""}