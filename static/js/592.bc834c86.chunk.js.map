{"version":3,"file":"static/js/592.bc834c86.chunk.js","mappings":"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","sources":["pages/Settings.js"],"sourcesContent":["/**\n * Settings Page\n * User profile and app settings\n */\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { userAPI } from '../services/api';\nimport { toast } from 'react-toastify';\nimport './Settings.css';\n\nconst Settings = () => {\n  const { user, updateUser, logout } = useAuth();\n  const { setTheme } = useTheme();\n  const navigate = useNavigate();\n  const [profileData, setProfileData] = useState({\n    name: user?.name || '',\n    profilePic: user?.profilePic || ''\n  });\n  const [useNameAvatar, setUseNameAvatar] = useState(\n    !user?.profilePic || user?.profilePic.includes('ui-avatars.com')\n  );\n  const [savingsGoal, setSavingsGoal] = useState(user?.savingsGoal || 5000);\n  const [settings, setSettings] = useState({\n    assistantPersonality: user?.assistantPersonality || 'cheerful',\n    theme: user?.theme || 'light'\n  });\n  const [loading, setLoading] = useState({\n    profile: false,\n    savings: false,\n    settings: false\n  });\n\n  const handleSavingsGoalChange = (e) => {\n    let value = e.target.value;\n    \n    // Remove any non-numeric characters except decimal point\n    value = value.replace(/[^\\d.]/g, '');\n    \n    // Prevent multiple decimal points\n    const parts = value.split('.');\n    if (parts.length > 2) {\n      value = parts[0] + '.' + parts.slice(1).join('');\n    }\n    \n    // Limit to 7 digits before decimal point\n    if (parts[0] && parts[0].length > 7) {\n      value = parts[0].slice(0, 7) + (parts[1] ? '.' + parts[1] : '');\n    }\n    \n    // Limit to 2 decimal places\n    if (parts[1] && parts[1].length > 2) {\n      value = parts[0] + '.' + parts[1].slice(0, 2);\n    }\n    \n    setSavingsGoal(value === '' ? '' : parseFloat(value) || 0);\n  };\n\n  const handleProfileUpdate = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, profile: true });\n\n    try {\n      // Generate avatar URL if using name avatar\n      const updatedProfileData = {\n        ...profileData,\n        profilePic: useNameAvatar \n          ? `https://ui-avatars.com/api/?name=${encodeURIComponent(profileData.name)}&background=random&size=200`\n          : profileData.profilePic\n      };\n\n      const response = await userAPI.updateProfile(updatedProfileData);\n      updateUser(response.data.user);\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      toast.error('Failed to update profile');\n      console.error(error);\n    } finally {\n      setLoading({ ...loading, profile: false });\n    }\n  };\n\n  const handleSavingsUpdate = async (e) => {\n    e.preventDefault();\n    \n    // Validate savings goal\n    if (isNaN(savingsGoal) || savingsGoal <= 0) {\n      toast.error('Please enter a valid savings goal greater than 0');\n      return;\n    }\n    \n    if (savingsGoal > 9999999.99) {\n      toast.error('Savings goal cannot exceed 9,999,999.99');\n      return;\n    }\n    \n    setLoading({ ...loading, savings: true });\n\n    try {\n      await userAPI.updateBudget({ savingsGoal });\n      updateUser({ savingsGoal });\n      toast.success('Savings goal updated successfully');\n    } catch (error) {\n      toast.error('Failed to update savings goal');\n      console.error(error);\n    } finally {\n      setLoading({ ...loading, savings: false });\n    }\n  };\n\n  const handleSettingsUpdate = async (e) => {\n    e.preventDefault();\n    setLoading({ ...loading, settings: true });\n\n    try {\n      await userAPI.updateSettings(settings);\n      updateUser(settings);\n      \n      // Apply theme immediately\n      setTheme(settings.theme);\n      \n      toast.success('Settings updated successfully');\n    } catch (error) {\n      toast.error('Failed to update settings');\n      console.error(error);\n    } finally {\n      setLoading({ ...loading, settings: false });\n    }\n  };\n\n  const handleDeleteAccount = async () => {\n    const confirmed = window.confirm(\n      '⚠️ Are you absolutely sure you want to delete your account?\\n\\n' +\n      'This will permanently delete:\\n' +\n      '• All your transactions\\n' +\n      '• Your profile and settings\\n' +\n      '• All financial data and reports\\n\\n' +\n      'This action CANNOT be undone!'\n    );\n\n    if (!confirmed) return;\n\n    const doubleConfirm = window.prompt(\n      'Type \"DELETE\" (in capitals) to confirm account deletion:'\n    );\n\n    if (doubleConfirm !== 'DELETE') {\n      toast.error('Account deletion cancelled');\n      return;\n    }\n\n    try {\n      await userAPI.deleteAccount();\n      toast.success('Account deleted successfully');\n      logout();\n      navigate('/login');\n    } catch (error) {\n      toast.error('Failed to delete account');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"page-header\">\n        <h1>Settings</h1>\n        <p>Manage your profile and app preferences</p>\n      </div>\n\n      <div className=\"settings-grid\">\n        {/* Profile Settings */}\n        <div className=\"card\">\n          <h2 className=\"section-title\">👤 Profile Information</h2>\n          <form onSubmit={handleProfileUpdate}>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Full Name</label>\n              <input\n                type=\"text\"\n                value={profileData.name}\n                onChange={(e) => setProfileData({ ...profileData, name: e.target.value })}\n                className=\"form-control\"\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"email\"\n                value={user?.email}\n                className=\"form-control\"\n                disabled\n              />\n              <small className=\"form-text\">Email cannot be changed</small>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Profile Picture</label>\n              <div className=\"avatar-options\">\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"avatarType\"\n                    checked={useNameAvatar}\n                    onChange={() => setUseNameAvatar(true)}\n                  />\n                  <span>Use name initials (auto-generated)</span>\n                </label>\n                <label className=\"radio-option\">\n                  <input\n                    type=\"radio\"\n                    name=\"avatarType\"\n                    checked={!useNameAvatar}\n                    onChange={() => setUseNameAvatar(false)}\n                  />\n                  <span>Use custom image URL</span>\n                </label>\n              </div>\n            </div>\n\n            {!useNameAvatar && (\n              <div className=\"form-group\">\n                <label className=\"form-label\">Profile Picture URL</label>\n                <input\n                  type=\"url\"\n                  value={profileData.profilePic}\n                  onChange={(e) => setProfileData({ ...profileData, profilePic: e.target.value })}\n                  className=\"form-control\"\n                  placeholder=\"https://example.com/avatar.jpg\"\n                />\n              </div>\n            )}\n\n            <div className=\"profile-preview\">\n              <img \n                src={\n                  useNameAvatar \n                    ? `https://ui-avatars.com/api/?name=${encodeURIComponent(profileData.name || 'User')}&background=random&size=200`\n                    : profileData.profilePic\n                } \n                alt=\"Profile\" \n                className=\"preview-image\"\n                onError={(e) => {\n                  e.target.src = 'https://ui-avatars.com/api/?name=User&background=random&size=200';\n                }}\n              />\n              <small className=\"form-text\">\n                {useNameAvatar ? 'Auto-generated from your name' : 'Preview of your profile picture'}\n              </small>\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading.profile}\n            >\n              {loading.profile ? 'Updating...' : 'Update Profile'}\n            </button>\n          </form>\n        </div>\n\n        {/* Savings Settings */}\n        <div className=\"card\">\n          <h2 className=\"section-title\">🎯 Savings Goal</h2>\n          <form onSubmit={handleSavingsUpdate}>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Monthly Savings Goal (₹)</label>\n              <input\n                type=\"text\"\n                value={savingsGoal}\n                onChange={handleSavingsGoalChange}\n                className=\"form-control\"\n                required\n                inputMode=\"decimal\"\n              />\n              <small className=\"form-text\">\n                Set your monthly savings target (recommended: 20-50% of income). Max: 9,999,999.99\n              </small>\n            </div>\n\n            <div className=\"budget-info\">\n              <div className=\"info-item\">\n                <span className=\"info-label\">Current Goal:</span>\n                <span className=\"info-value\">₹{user?.savingsGoal?.toFixed(2)}</span>\n              </div>\n              <div className=\"info-item\">\n                <span className=\"info-label\">New Goal:</span>\n                <span className=\"info-value\">₹{savingsGoal.toFixed(2)}</span>\n              </div>\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading.savings}\n            >\n              {loading.savings ? 'Updating...' : 'Update Savings Goal'}\n            </button>\n          </form>\n        </div>\n\n        {/* App Settings */}\n        <div className=\"card\">\n          <h2 className=\"section-title\">⚙️ App Preferences</h2>\n          <form onSubmit={handleSettingsUpdate}>\n            <div className=\"form-group\">\n              <label className=\"form-label\">Assistant Personality</label>\n              <select\n                value={settings.assistantPersonality}\n                onChange={(e) => setSettings({ ...settings, assistantPersonality: e.target.value })}\n                className=\"form-select\"\n              >\n                <option value=\"cheerful\">😊 Cheerful - Enthusiastic and energetic</option>\n                <option value=\"calm\">😌 Calm - Balanced and encouraging</option>\n                <option value=\"strict\">😐 Strict - Direct and goal-focused</option>\n              </select>\n              <small className=\"form-text\">\n                Choose how your anime assistant interacts with you\n              </small>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Theme</label>\n              <select\n                value={settings.theme}\n                onChange={(e) => {\n                  const newTheme = e.target.value;\n                  setSettings({ ...settings, theme: newTheme });\n                  // Apply theme instantly for preview\n                  setTheme(newTheme);\n                }}\n                className=\"form-select\"\n              >\n                <option value=\"light\">☀️ Light Theme</option>\n                <option value=\"dark\">🌙 Dark Theme</option>\n                <option value=\"auto\">🔄 Auto (System)</option>\n              </select>\n              <small className=\"form-text\">\n                Select your preferred color scheme (changes instantly!)\n              </small>\n            </div>\n\n            <button \n              type=\"submit\" \n              className=\"btn btn-primary\"\n              disabled={loading.settings}\n            >\n              {loading.settings ? 'Updating...' : 'Update Settings'}\n            </button>\n          </form>\n        </div>\n\n        {/* Delete Account */}\n        <div className=\"card danger-zone\">\n          <h2 className=\"section-title\">�️ Delete Account</h2>\n          <p className=\"warning-text\">\n            ⚠️ Warning: This action cannot be undone. Deleting your account will permanently remove:\n          </p>\n          <ul className=\"warning-list\">\n            <li>All your transactions</li>\n            <li>Your profile and settings</li>\n            <li>All financial data and reports</li>\n          </ul>\n          <button \n            className=\"btn btn-danger\"\n            onClick={handleDeleteAccount}\n          >\n            Delete My Account\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"names":["Settings","_user$savingsGoal","user","updateUser","logout","useAuth","setTheme","useTheme","navigate","useNavigate","profileData","setProfileData","useState","name","profilePic","useNameAvatar","setUseNameAvatar","includes","savingsGoal","setSavingsGoal","settings","setSettings","assistantPersonality","theme","loading","setLoading","profile","savings","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","_objectSpread","updatedProfileData","concat","encodeURIComponent","response","userAPI","updateProfile","data","toast","success","error","console","type","value","onChange","target","required","email","disabled","checked","placeholder","src","alt","onError","isNaN","updateBudget","replace","parts","split","length","slice","join","parseFloat","inputMode","toFixed","updateSettings","newTheme","onClick","window","confirm","prompt","deleteAccount"],"sourceRoot":""}